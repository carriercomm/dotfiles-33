#!/usr/bin/env bash

# Sets reasonable OS X defaults.

# TODO
#	mouse/trackpad scrolling
#	right click to double tap
#	icons in Dock
#	time display settings

# To Explore
# Watch for changes in files with either of
#  sudo fs_usage | grep plist
#  sudo opensnoop | grep plist

# Reset text attributes to normal + without clearing screen.
alias Reset="tput sgr0"
red='\033[0;31m'

echo ""
echo $red "##############################################"
echo $red "#   CAUTION: DO NOT BLINDLY RUN THIS SCRIPT"
echo $red "#      YOU WILL PROBABLY REGRET IT..."
echo $red "#############################################"
echo ""
Reset
read -p "Continue to run script?? (y/n) " -n 1
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
	echo ""
else
	exit
fi

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until has finished
# while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

killall System\ Preferences


AmbientLightSensor()
{
	echo "AmbientLightSensor"
	# Display -> Automatically adjust brightness
	sudo defaults write /Library/Preferences/com.apple.iokit.AmbientLightSensor "Automatic Display Enabled" -bool false

	# Keyboard -> Adjust keyboard brightness in low light
	sudo defaults write /Library/Preferences/com.apple.iokit.AmbientLightSensor "Automatic Keyboard Enabled" -bool false	
}

Screen()
{
	echo "Screen"

	# Enable subpixel font rendering on non-Apple LCDs
	defaults write NSGlobalDomain AppleFontSmoothing -int 2

	# Set Screen Savers
	defaults -currentHost write com.apple.screensaver moduleDict "
	  <dict>
	    <key>moduleName</key><string>Shell</string>
	    <key>path</key><string>/System/Library/Screen Savers/Shell.qtz</string>
	    <key>type</key><integer>1</integer>
	  </dict>
	"

	# Start after 30 Minutes
	defaults -currentHost write com.apple.screensaver idleTime -int 600

	# Show with clock (default)
	defaults -currentHost write com.apple.screensaver showClock -bool true

	# Enable keyboard shortcut to toggle Dark Mode ON or OFF: Command+Option+Control+T
	sudo defaults write /Library/Preferences/.GlobalPreferences.plist _HIEnableThemeSwitchHotKey -bool true
}

Security()
{
	echo "Security"
	# Require password immediately after sleep or screen saver begins
	defaults write com.apple.screensaver askForPassword -int 1
	defaults write com.apple.screensaver askForPasswordDelay -int 0	

	# Disable guest user
	defaults write com.apple.AppleFileServer guestAccess -bool false
	defaults write SystemConfiguration/com.apple.smb.server AllowGuestAccess -bool false
}

LoginWindow()
{
	echo "Login window"
	# Show shut down etc. buttons
	sudo defaults write /Library/Preferences/com.apple.loginwindow PowerOffDisabled -bool false

	# Don't show any password hints
	sudo defaults write /Library/Preferences/com.apple.loginwindow RetriesUntilHint -int 0

	# Allow fast user switching
	#sudo defaults write /Library/Preferences/.GlobalPreferences MultipleSessionEnabled -bool true	
}


General()
{
	echo "General"

	# Set computer name (as done via System Preferences → Sharing)
	sudo scutil --set ComputerName "delicious"
	sudo scutil --set HostName "delicious"
	sudo scutil --set LocalHostName "delicious"
	sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "delicious"

	# Set standby delay to 24 hours (default is 1 hour)
	sudo pmset -a standbydelay 86400

	# Set highlight color to green
	#no key defaults write NSGlobalDomain AppleHighlightColor -string "0.764700 0.976500 0.568600"

	# Disable opening and closing window animations
	# defaults write NSGlobalDomain NSAutomaticWindowAnimationsEnabled -bool false

	# Increase window resize speed for Cocoa applications
	#? defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

	# Expand save panel by default
	defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true

	# Expand print panel by default
	# defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
	# defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

	# Save to disk (not to iCloud) by default
	# defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

	# Automatically quit printer app once the print jobs complete
	# defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

	# Disable automatic termination of inactive apps
	#defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true

	# Set Help Viewer windows to non-floating mode
	# defaults write com.apple.helpviewer DevMode -bool true

	# Reveal IP address, hostname, OS version, etc. when clicking the clock
	# in the login window
	sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

	# Restart automatically if the computer freezes
	# systemsetup -setrestartfreeze on
	
	# Build locate database (/var/db/locate.database)
	sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist
}

Screenshots()
{
	echo "Screenshots"

	# Save screenshots to
	defaults write com.apple.screencapture location -string "$HOME/Downloads/"

	# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
	defaults write com.apple.screencapture type -string "png"

	# Disable shadow in screenshots
	defaults write com.apple.screencapture disable-shadow -bool true	
}


Mail()
{
	echo "Mail.app"
	# Setting email addresses to copy as 'foo@example.com' instead of 'Foo Bar <foo@example.com>' in Mail.app
	defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false

}

iTunes()
{
	echo "iTunes.app"

	# disable iTunes device backups:
	defaults write com.apple.iTunes AutomaticDeviceBackupsDisabled -bool true
	defaults write com.apple.iTunes DeviceBackupsDisabled -bool true

	# song Dock alarm
	defaults write com.apple.dock itunes-notifications -bool TRUE

	# to disable
	# defaults delete com.apple.dock itunes-notifications
	# defaults delete com.apple.dock notification-always-show-image
}


Spotlight()
{
	echo "Spotlight"

	# Hide the Spotlight icon
	# sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search

	# Disable Spotlight indexing for any volume that gets mounted and has not yet
	# been indexed before.
	# Use `sudo mdutil -i off "/Volumes/foo"` to stop indexing any volume.
	# sudo defaults write /.Spotlight-V100/VolumeConfiguration Exclusions -array "/Volumes"
	# Change indexing order and disable some file types
	#defaults write com.apple.spotlight orderedItems -array \
	#	'{"enabled" = 1;"name" = "APPLICATIONS";}' \
	#	'{"enabled" = 1;"name" = "SYSTEM_PREFS";}' \
	#	'{"enabled" = 1;"name" = "DIRECTORIES";}' \
	#	'{"enabled" = 1;"name" = "PDF";}' \
	#	'{"enabled" = 0;"name" = "FONTS";}' \
	#	'{"enabled" = 1;"name" = "DOCUMENTS";}' \
	#	'{"enabled" = 0;"name" = "MESSAGES";}' \
	#	'{"enabled" = 0;"name" = "CONTACT";}' \
	#	'{"enabled" = 0;"name" = "EVENT_TODO";}' \
	#	'{"enabled" = 0;"name" = "IMAGES";}' \
	#	'{"enabled" = 0;"name" = "BOOKMARKS";}' \
	#	'{"enabled" = 0;"name" = "MUSIC";}' \
	#	'{"enabled" = 0;"name" = "MOVIES";}' \
	#	'{"enabled" = 1;"name" = "PRESENTATIONS";}' \
	#	'{"enabled" = 1;"name" = "SPREADSHEETS";}' \
	#	'{"enabled" = 1;"name" = "SOURCE";}'
	# Load new settings before rebuilding the index
	#killall mds > /dev/null 2>&1
	# Make sure indexing is enabled for the main volume
	#sudo mdutil -i on / > /dev/null
	# Rebuild the index from scratch
	#sudo mdutil -E / > /dev/null	
}

TimeMachine()
{
	echo "Time Machine"
	# Prevent Time Machine from prompting to use new hard drives as backup volume
	defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true
}

AddressBook()
{
	echo "AddressBook.app"

	# Enable the debug menu in Address Book
	defaults write com.apple.addressbook ABShowDebugMenu -bool true
}

TextEdit()
{
	echo "TextEdit.app"

	# Use plain text mode for new TextEdit documents
	defaults write com.apple.TextEdit RichText -int 0
	# Open and save files as UTF-8 in TextEdit
	defaults write com.apple.TextEdit PlainTextEncoding -int 4
	defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4
}


Sound()
{
	echo "Sound settings"

	# Change the error sound
	defaults write com.apple.systemsound com.apple.sound.beep.sound -string "/System/Library/Sounds/Morse.aiff"

	# Disable volume change feedback
	defaults write NSGlobalDomain com.apple.sound.beep.feedback -int 0
}

InputDevices()
{
	echo "Trackpad, mouse, keyboard, Bluetooth accessories, and input"

	# Trackpad: enable tap to click for this user and for the login screen
	defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
	defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
	defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

	# Trackpad: three finger tap
	defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerTapGesture -int 1
	defaults -currentHost write NSGlobalDomain com.apple.trackpad.threeFingerTapGesture -int 1

	# Trackpad: disable swipe from right to show notification center
	defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadTwoFingerFromRightEdgeSwipeGesture -int 0
	defaults -currentHost write NSGlobalDomain com.apple.trackpad.twoFingerFromRightEdgeSwipeGesture -int 0

	# Trackpad: map bottom right corner to right-click
	defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
	defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
	defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
	defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true

	# Disable “natural” (Lion-style) scrolling
	defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false

	# Enable full keyboard access for all controls
	# (e.g. enable Tab in modal dialogs)
	defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

	# Disable 'smart' quotes
	defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

	# Disable smart dashes
	defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

	# Use scroll gesture with the Ctrl (^) modifier key to zoom
	defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
	defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144
	# Follow the keyboard focus while zoomed in
	defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true

	# Disable El Capitan shake to magnify cursor
	defaults write NSGlobalDomain CGDisableCursorLocationMagnification -bool true

	# Disable press-and-hold for keys in favor of key repeat
	defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

	# Delay Until Repeat
	defaults write NSGlobalDomain "InitialKeyRepeat_Level_Saved" -int 0

	# Set a blazingly fast keyboard repeat rate
	defaults write NSGlobalDomain KeyRepeat -int 0

	# Set the timezone; see `systemsetup -listtimezones` for other values
	systemsetup -settimezone "Europe/Moscow" > /dev/null

	# Automatically illuminate built-in MacBook keyboard in low light
	defaults write com.apple.BezelServices kDim -bool true

	# Turn off keyboard illumination when computer is not used for 5 minutes
	defaults write com.apple.BezelServices kDimTime -int 300

	# Disable auto-correct
	defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false
	defaults write NSGlobalDomain WebAutomaticSpellingCorrectionEnabled -bool false
	 
	 # Turn Bluetooth off.
 	sudo defaults write /Library/Preferences/com.apple.Bluetooth ControllerPowerState -int 0
}

LanguageAndRegion()
{
	defaults write NSGlobalDomain AppleLanguages -array "en" "ru"
	defaults write NSGlobalDomain AppleLocale -string "en_RU"
	defaults write NSGlobalDomain AppleMeasurementUnits -string "Centimeters"
	defaults write NSGlobalDomain AppleMetricUnits -bool true
}

MenuBar()
{
	echo "Menu bar items"
	
	# Affected: SystemUIServer

	defaults write com.apple.systemuiserver menuExtras -array \
    "/System/Library/CoreServices/Menu Extras/Volume.menu" \
    "/System/Library/CoreServices/Menu Extras/TextInput.menu" \
    "/System/Library/CoreServices/Menu Extras/TimeMachine.menu" \
    "/System/Library/CoreServices/Menu Extras/Battery.menu" \
    "/System/Library/CoreServices/Menu Extras/AirPort.menu" \
    "/System/Library/CoreServices/Menu Extras/Clock.menu" \

    # battery hide percentage
	defaults write com.apple.menuextra.battery ShowPercent -string "NO"

	# Setup the menu bar date format
	defaults write com.apple.menuextra.clock DateFormat -string "EEE MMM d h:mm a"

	# Flash the : in the menu bar
	defaults write com.apple.menuextra.clock FlashDateSeparators -bool false

	# 24 hour time
	defaults write NSGlobalDomain AppleICUForce24HourTime -bool false
	defaults write NSGlobalDomain AppleICUTimeFormatStrings -dict \
	  1 -string "H:mm" \
	  2 -string "H:mm:ss" \
	  3 -string "H:mm:ss z" \
	  4 -string "H:mm:ss zzzz"
}


Finder()
{
	echo "Finder.app"

	# Set sidebar icon size to medium
	defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

	# Set default location for new Finder windows
	# For other paths, use `PfLo` and `file:///full/path/here/`
	defaults write com.apple.finder NewWindowTarget -string "PfLo"
	defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"

	# Finder: allow quitting via ⌘ + Q; doing so will also hide desktop icons
	defaults write com.apple.finder QuitMenuItem -bool true

	# Finder: disable window animations and Get Info animations
	# defaults write com.apple.finder DisableAllAnimations -bool true

	# Show icons for hard drives, servers, and removable media on the desktop
	defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
	defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
	defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
	defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

	# Finder: show hidden files by default
	defaults write com.apple.finder AppleShowAllFiles -bool true

	# Finder: show all filename extensions
	defaults write NSGlobalDomain AppleShowAllExtensions -bool true

	# Show Finder Path, status bar and tabview
	defaults write com.apple.finder ShowPathbar -bool true
	defaults write com.apple.finder ShowStatusBar -bool true
	defaults write com.apple.finder ShowTabView -bool true

	# Finder: allow text selection in Quick Look
	defaults write com.apple.finder QLEnableTextSelection -bool true

	# Display full POSIX path as Finder window title
	defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

	# When performing a search, search the current folder by default
	defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

	# Disable the warning when changing a file extension
	defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

	# Avoid creating .DS_Store files on network volumes
	defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

	# Remove the spring loading delay for directories
	#defaults write NSGlobalDomain com.apple.springing.delay -float 0

	# Disable disk image verification
	defaults write com.apple.frameworks.diskimages skip-verify -bool true
	defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
	defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true

	# Automatically open a new Finder window when a volume is mounted
	defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
	defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
	defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

	# Show item info below icons on the desktop and in other icon views
	#/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
	#/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
	#/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist

	# Enable snap-to-grid for icons on the desktop and in other icon views
	#/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
	#/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
	#/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

	# Increase grid spacing for icons on the desktop and in other icon views
	#/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
	#/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
	#/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist

	# Increase the size of icons on the desktop and in other icon views
	#/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
	#/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
	#/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist

	# Use list view in all Finder windows by default
	# Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
	defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

	# Disable the warning before emptying the Trash
	defaults write com.apple.finder WarnOnEmptyTrash -bool false

	# Empty Trash not securely by default
	defaults write com.apple.finder EmptyTrashSecurely -bool false

	# Show the ~/Library folder
	chflags nohidden ~/Library

	# Expand the following File Info panes:
	# “General”, “Open with”, and “Sharing & Permissions”
	defaults write com.apple.finder FXInfoPanesExpanded -dict \
		General -bool true \
		OpenWith -bool true \
		Privileges -bool true

	# Disable the “Are you sure you want to open this application?” dialog
	defaults write com.apple.LaunchServices LSQuarantine -bool false

}

DiskUtility()
{
	echo "Disk Utility.app"

	# Enable the debug menu in Disk Utility
	defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true
	defaults write com.apple.DiskUtility advanced-image-options -bool true
}


MissionControl()
{
	echo "Mission Control, Launchpad, Dashboard, Spaces"

	# Speed up Mission Control animations
	#defaults write com.apple.dock expose-animation-duration -float 0.14

	# Don’t group windows by application in Mission Control
	# (i.e. use the old Exposé behavior instead)
	defaults write com.apple.dock expose-group-by-app -bool false

	# App Exposé
	defaults write com.apple.dock showAppExposeGestureEnabled -bool true

	# Don’t group windows by application in Mission Control
	# (i.e. use the old Exposé behavior instead)
	#? defaults write com.apple.dock expose-group-by-app -bool false

	# Reset Launchpad
	#? find ~/Library/Application\ Support/Dock -name "*.db" -maxdepth 1 -delete

	# Disable Dashboard (by default)
	defaults write com.apple.dashboard mcx-disabled -boolean YES

	# Enable Dashboard dev mode (allows keeping widgets on the desktop)
	#defaults write com.apple.dashboard devmode -bool true

	# Don’t show Dashboard as a Space
	defaults write com.apple.dock dashboard-in-overlay -bool true

	# Don’t automatically rearrange Spaces based on most recent use
	defaults write com.apple.dock mru-spaces -bool false

	# Hot corners
	# Possible values:
	#  0: no-op
	#  2: Mission Control
	#  3: Show application windows
	#  4: Desktop
	#  5: Start screen saver
	#  6: Disable screen saver
	#  7: Dashboard
	# 10: Put display to sleep
	# 11: Launchpad
	# 12: Notification Center
	# Top left screen corner → Mission Control
	defaults write com.apple.dock wvous-tl-corner -int 0
	defaults write com.apple.dock wvous-tl-modifier -int 0
	# Top right screen corner → Desktop
	defaults write com.apple.dock wvous-tr-corner -int 0
	defaults write com.apple.dock wvous-tr-modifier -int 0
	# Bottom left screen corner → Start screen saver
	defaults write com.apple.dock wvous-bl-corner -int 5
	defaults write com.apple.dock wvous-bl-modifier -int 0
	# Bottom right screen corner → Start screen saver
	defaults write com.apple.dock wvous-br-corner -int 10
	defaults write com.apple.dock wvous-br-modifier -int 0
}

Dock()
{
	echo "Dock"

	# Wipe all (default) app icons from the Dock
	# This is only really useful when setting up a new Mac, or if you don’t use
	# the Dock to launch apps.
	defaults write com.apple.dock persistent-apps -array

	# Disable dock magification
	defaults write com.apple.dock magnification -bool false

	# Set location
	defaults write com.apple.Dock orientation -string "left"

	# Set the icon size of Dock items to 36 pixels
	defaults write com.apple.dock tilesize -int 36

	# Automatically hide and show the Dock
	defaults write com.apple.dock autohide -bool true

	# auto-hiding Dock delay
	defaults write com.apple.dock autohide-delay -float .15 

	# animation when hiding/showing the Dock
	defaults write com.apple.dock autohide-time-modifier -float .8

	# Make Dock icons of hidden applications translucent
	defaults write com.apple.dock showhidden -bool true

	# Show indicator lights for open applications in the Dock
	defaults write com.apple.dock show-process-indicators -bool true
}

Safari()
{
	echo "Safari"

	# Privacy: don’t send search queries to Apple
	defaults write com.apple.Safari UniversalSearchEnabled -bool false
	defaults write com.apple.Safari SuppressSearchSuggestions -bool true

	# Press Tab to highlight each item on a web page
	defaults write com.apple.Safari WebKitTabToLinksPreferenceKey -bool true
	defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks -bool true

	# Show the full URL in the address bar (note: this still hides the scheme)
	defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true

	# Set Safari’s home page to `about:blank` for faster loading
	defaults write com.apple.Safari HomePage -string "about:blank"

	# Prevent Safari from opening ‘safe’ files automatically after downloading
	defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

	# Allow hitting the Backspace key to go to the previous page in history
	 defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool true

	# Hide Safari’s bookmarks bar by default
	defaults write com.apple.Safari ShowFavoritesBar -bool false

	# Hide Safari’s sidebar in Top Sites
	defaults write com.apple.Safari ShowSidebarInTopSites -bool false

	# Disable Safari’s thumbnail cache for History and Top Sites
	# defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2

	# Enable Safari’s debug menu
	defaults write com.apple.Safari IncludeInternalDebugMenu -bool true

	# Make Safari’s search banners default to Contains instead of Starts With
	defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false

	# Remove icons from Safari’s bookmarks bar
	#defaults write com.apple.Safari ProxiesInBookmarksBar "()"

	# Enable the Develop menu and the Web Inspector in Safari
	defaults write com.apple.Safari IncludeDevelopMenu -bool true
	defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
	defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

	# Add a context menu item for showing the Web Inspector in web views
	defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

	# Show status bar
	defaults write com.apple.Safari ShowStatusBar -bool true
	defaults write com.apple.Safari ShowStatusBarInFullScreen -bool true
}

Calendar()
{	
	echo "Calendar.app"
	
	# day start 8:00, end at 20:00
	defaults write com.apple.iCal "first minute of work hours" $((8 * 60))
	defaults write com.apple.iCal "last minute of work hours" $((20 * 60))

	defaults write com.apple.iCal "first minute of day time range" 0
	defaults write com.apple.iCal "last minute of day time range" $((24 * 60))

	defaults write com.apple.iCal "n days of week" 7

	defaults write com.apple.iCal "number of hours displayed" 18

	defaults write com.apple.iCal lastViewsTimeZone "Europe/Moscow"
	defaults write com.apple.iCal "TimeZone support enabled" -bool true
}


ActivityMonitor()
{
	echo "Activity Monitor.app"

	# Show the main window when launching Activity Monitor 
	defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

	# Visualize CPU usage in the Activity Monitor Dock icon
	defaults write com.apple.ActivityMonitor IconType -int 5

	# Show all processes in Activity Monitor
	defaults write com.apple.ActivityMonitor ShowCategory -int 0

	# Sort Activity Monitor results by CPU usage
	defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
	defaults write com.apple.ActivityMonitor SortDirection -int 0
}

AppStore()
{
	echo "App Store.app"

	# Check for software updates daily, not just once per week
	defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

	# Enable the WebKit Developer Tools in the Mac App Store
	#defaults write com.apple.appstore WebKitDeveloperExtras -bool true

	# Enable Debug Menu in the Mac App Store
	#defaults write com.apple.appstore ShowDebugMenu -bool true
}


Terminal()
{
	echo "Terminal.app"

	# Enabling UTF-8 ONLY in Terminal.app and setting the Pro theme by default
	defaults write com.apple.terminal StringEncodings -array 4
	defaults write com.apple.Terminal "Default Window Settings" -string "Pro"
	defaults write com.apple.Terminal "Startup Window Settings" -string "Pro"

	# New tabs open with Default Working Directory
	defaults write com.apple.Terminal NewTabWorkingDirectoryBehavior -bool true
}


XCode()
{
	echo "XCode"

	# Trim trailing whitespace
	defaults write com.apple.dt.Xcode DVTTextEditorTrimTrailingWhitespace -bool true

	# Trim whitespace only lines
	defaults write com.apple.dt.Xcode DVTTextEditorTrimWhitespaceOnlyLines -bool true

	# Don't show completion on escape
	defaults write com.apple.dt.Xcode DVTTextShowCompletionsOnEsc -bool false

	# Show line numbers
	defaults write com.apple.dt.Xcode DVTTextShowLineNumbers -bool true

	# Hide the code folding ribbon
	defaults write com.apple.dt.Xcode DVTTextShowFoldingSidebar -bool false

	# Enable automatic updates
	defaults write com.apple.dt.Xcode DVTDownloadableAutomaticUpdate -bool true

	# Live issues
	defaults write com.apple.dt.Xcode IDEEnableLiveIssues -bool true

	# Continue building after errors
	defaults write com.apple.dt.Xcode IDEBuildingContinueBuildingAfterErrors -bool true

	# Show ruler at 80 chars
	defaults write com.apple.dt.Xcode DVTTextShowPageGuide -bool true
	defaults write com.apple.dt.Xcode DVTTextPageGuideLocation -int 80

	# Max number of lines
	defaults write com.apple.dt.Xcode IDEIssueNavigatorDetailLevel -int 10
	defaults write com.apple.dt.Xcode IDESearchNavigatorDetailLevel -int 10

	# Enable internal debug menu
	defaults write com.apple.dt.Xcode ShowDVTDebugMenu -bool true

	# Source control local revision side
	defaults write com.apple.dt.Xcode DVTComparisonOrientationDefaultsKey -int 0

	# Stack assitant editors vertically
	defaults write com.apple.dt.Xcode AssistantEditorsLayout -int 1

	# Use open quickly to open in the focused pane
	defaults write com.apple.dt.Xcode IDEEditorCoordinatorTarget_Click -string FocusedEditor

	# Use custom derived data location
	defaults write com.apple.dt.Xcode IDECustomDerivedDataLocation -string build

	# Disable source control
	# defaults write com.apple.dt.Xcode IDESourceControlEnableSourceControl_5_0 -bool false
	# defaults write com.apple.dt.Xcode IDESourceControlEnableSourceControl_5_1 -bool false

}

AmbientLightSensor
Screen
Security
LoginWindow
General
Screenshots
Mail
iTunes
Spotlight
TimeMachine
AddressBook
TextEdit
Sound
InputDevices
MenuBar
Finder
DiskUtility
MissionControl
Dock
Safari
Calendar
ActivityMonitor
AppStore
Terminal
XCode

# =============================================================================#
# Kill affected applications                                                   #
# =============================================================================#

echo "Almost complete, no we need to shutdown affected applications.. "
read -p "press any key." -n 1

for app in "Address Book" "Calendar" "Contacts" "Dashboard" "Dock" "Finder" \
	"Mail" "Safari" "SystemUIServer" "Terminal" "iCal" "iTunes" "Activity Monitor"; do
	killall "$app" > /dev/null 2>&1
done
echo "Done. Note that some of these changes require a logout/restart to take effect."